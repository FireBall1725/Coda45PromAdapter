plugins {
    id("org.jetbrains.kotlin.jvm")
    id("org.jetbrains.kotlin.kapt")
    id "org.jetbrains.kotlin.plugin.jpa"
    id("org.jetbrains.kotlin.plugin.allopen")
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.3.2"
}

version = "0.0.1"
group = "ca.fireball1725.coda45promadapter"

dependencies {
    kapt("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")

    implementation "io.micronaut.micrometer:micronaut-micrometer-core"
    implementation "io.micrometer:micrometer-registry-prometheus"

    implementation "org.slf4j:slf4j-simple:1.7.36"

    implementation 'io.prometheus:simpleclient:0.15.0'
    implementation "io.prometheus:simpleclient_hotspot:0.15.0"
    implementation "io.prometheus:simpleclient_httpserver:0.15.0"

    implementation 'com.google.code.gson:gson:2.9.0'

    implementation "com.squareup.okhttp3:okhttp:4.9.3"

    implementation project(path: ':processor')
    kapt project(':processor')
}

application {
    mainClass = 'ca.fireball1725.coda45promadapter.Application'
}

task Main(type: CreateStartScripts) {
    mainClassName = "ca.fireball1725.coda45promadapter.Application"
    applicationName = "Coda45PromAdapter"
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

applicationDistribution.into("bin") {
    from(Main)
    fileMode = 0755
    applicationName = "Coda45PromAdapter"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

micronaut {
    version '3.4.1'
    runtime("netty")
    testRuntime("junit5")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
}

sourceSets {
    main {
        java {
            srcDir "${buildDir.absolutePath}/generated/source/kaptKotlin/"
        }
    }
}
